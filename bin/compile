#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
. ${BP_DIR}/lib/common.sh

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

export_env_dir ${ENV_DIR}

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
mkdir -p /tmp/jvm-common
curl --silent --location ${JVM_COMMON_BUILDPACK} | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

# install JDK
javaVersion=$(detect_java_version ${BUILD_DIR})
status_pending "Installing OpenJDK ${javaVersion}"
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
status_done

# install and configure Datomic

SCRIPTS_TARGET_DIR=${BUILD_DIR}/scripts
mkdir ${SCRIPTS_TARGET_DIR}

DATOMIC_DOMAIN=https://my.datomic.com

# Highly reliant on page layout but nothing officially supported yet so it's best efforts
detect_version() {
    curl --silent -L ${DATOMIC_DOMAIN}/downloads/free |
    grep "<td>" | head -3 | tail -1 |
    sed 's:.*<td>\(.*\)</td>:\1:' | grep '^[0-9].*'
}

[ -z "${DATOMIC_VERSION}" ] && {
    DATOMIC_VERSION=0.9.5327

    version=$(detect_version)
    [ -n "${version}" ] && DATOMIC_VERSION=${version}
}

echo -n "-----> Installing Datomic ${DATOMIC_VERSION}... (default is 0.9.5327)"

DATOMIC_FREE_VERSION=true

[ -n "${DATOMIC_TRANSACTOR_KEY}" ] && [ -n "${DATOMIC_LICENSE_USER}" ] && [ -n "${DATOMIC_LICENSE_PASSWORD}" ] && {
    DATOMIC_FREE_VERSION=false
}

if [ ${DATOMIC_FREE_VERSION} == "true" ]
then
    DATOMIC_BINARY=${DATOMIC_DOMAIN}/downloads/free/${DATOMIC_VERSION}
    curl -L --silent ${DATOMIC_BINARY} > datomic.zip
    jar xf datomic.zip
    mv datomic-free-* ${BUILD_DIR}/datomic
    echo "done" # install is done
else
    [ -z "${DATOMIC_LICENSE_USER}" ] || [ -z "${DATOMIC_LICENSE_PASSWORD}" ] || [ -z "${DATOMIC_TRANSACTOR_KEY}" ] && {
        echo "DATOMIC_LICENSE_USER DATOMIC_LICENSE_PASSWORD DATOMIC_TRANSACTOR_KEY must be set - aborting"
        exit 1
    }

    DATOMIC_BINARY=${DATOMIC_DOMAIN}/repo/com/datomic/datomic-pro/${DATOMIC_VERSION}/datomic-pro-${DATOMIC_VERSION}.zip
    curl -L --silent -u ${DATOMIC_LICENSE_USER}:${DATOMIC_LICENSE_PASSWORD} ${DATOMIC_BINARY} > datomic.zip
    jar xf datomic.zip
    mv datomic-pro-* ${BUILD_DIR}/datomic
    echo "done" # install is done
    
    # Configure storage
    . ${BP_DIR}/lib/datomic-storage-config.sh

    configure_storage
fi

cp ${BP_DIR}/vendor/datomic/* ${SCRIPTS_TARGET_DIR}

chmod -R +x ${BUILD_DIR}

PROFILE_PATH="${BUILD_DIR}/.profile.d/java.sh"
mkdir -p $(dirname ${PROFILE_PATH})
echo 'export PATH="/app/.jdk/bin:$PATH"' >> ${PROFILE_PATH}
echo 'export PATH="/app/datomic/bin:$PATH"' >> ${PROFILE_PATH}
echo 'export PATH="/app/scripts:$PATH"' >> ${PROFILE_PATH}
echo 'export JAVA_TOOL_OPTIONS="$JAVA_TOOL_OPTIONS -Djava.rmi.server.useCodebaseOnly=true"' >> ${PROFILE_PATH}
